<dfkv-routed-modal>
  <dfk-routed-modal
    routes={routes()}
    props={props}
    on-component-mounted={() => onComponentMounted()}
    on-component-unmounted={() => onComponentUnmounted()}
    class="p-print-0"
  ><dfkv-fly-in class="d-print-none" /></dfk-routed-modal>

  <script>
    import {util} from '@wendig/lib'

    import FlyIn from './fly_in.riot'
    import RoutedModal from '../routed_modal.riot'

    import Record from './record.riot'
    import Watchlist from './watchlist.riot'

    export default class {
      static components = {
        'dfkv-fly-in': FlyIn,
        'dfk-routed-modal': RoutedModal
      }

      onMounted() {
        const element = this.root.querySelector('dfk-routed-modal')
        document.querySelector('body').append(element)
      }

      onComponentMounted() {
        document.querySelector('body').classList.add('dfkv-has-modal')

        this.compensateForScrollBar()
      }

      onComponentUnmounted() {
        document.querySelector('body').classList.remove('dfkv-has-modal')

        this.compensateForScrollBar(false)
      }

      // apply scroll bar width to offset for fly-in (otherwise the dialog
      // scroll bar isn't visible)
      compensateForScrollBar(activate = true) {
        const dialog = document.body.querySelector('dfk-routed-modal')
        const width = activate ? (dialog.offsetWidth - dialog.clientWidth) : '0'
        document.documentElement.style.setProperty(
          '--fly-in-offset-right', `${width}px`
        )
      }

      routes() {
        return [
          {url: /^$/, component: null},
          {url: /^\/records\/(?<id>\d+)$/, component: Record},
          {url: /^\/watchlist$/, component: Watchlist}
        ]
      }
    }
  </script>
</dfkv-routed-modal>