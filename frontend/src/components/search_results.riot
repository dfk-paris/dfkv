<dfkv-search-results>
  <dfk-pagination
    page={props.criteria.page || 1}
    per-page={props.criteria.per_page || 10}
    total={props.results.total()}
    page-to={page => this.toPage(page)}
  />

  <div class="search-results" if={props.results}>
    <div
      each={item in props.results.items()}
      class="search-result"
    >
      <div class="active-box">
        <a class="stretched-link" href="#"></a>

        <div class="content-box">
          <div class="meta">
            <div class="mb-1">{item.title()}</div>
            <div class="sans-serif font-weight-bold">Creator</div>
            <div class="ref mb-1">
              <em>Journal</em>,
              nÂ° 133, mai 1971, p. 12
            </div>
            <div class="text">{item.transcription()}</div>
          </div>
          <div class="sidebar">
            <div class="icon mb-1"><icon type="arrow-right" /></div>
            <div class="image">
              <img src={item.imageUrl()} />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>


  <script>
    import {Url} from '@wendig/lib'
    import {util} from '@wendig/lib'

    // import UrlSearch from '../lib/url_search'

    import Pagination from './pagination.riot'

    export default class {
      static components = {
        'dfk-pagination': Pagination
      }

      toPage(newPage) {
        this.props.onInputsChanged({page: newPage})
      }
    }
  </script>
</dfkv-search-results>
