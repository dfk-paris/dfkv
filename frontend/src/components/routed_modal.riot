<dfk-routed-modal active={active()}>
  <div class="target" />

  <script>
    import * as riot from 'riot'

    import {Url} from '@wendig/lib'

    export default class {
      constructor() {
        this.onHashChanged = this.onHashChanged.bind(this)
      }

      onMounted() {
        this.element = this.root.querySelector('.target')

        window.addEventListener('hashchange', this.onHashChanged)

        this.onHashChanged()
      }

      onUnmounted() {
        window.removeEventListener('hashchange', this.onHashChanged)
      }

      mountCmp(component) {
        this.unmountCmp()

        const mounter = riot.component(component)
        this.state.component = mounter(this.element)
        this.update()
      }

      unmountCmp() {
        if (this.state.component) {
          this.state.component.unmount(true)
          delete this.state['component']
          this.update()
        }
      }

      active() {
        return !!this.state.component
      }

      onHashChanged() {
        const url = Url.current()
        const path = url.hashPath()

        if (this.state.path != path) {
          this.state.path = path
          
          for (const e of this.props.routes) {
            if (path.match(e['url'])) {
              if (e['component']) {
                this.mountCmp(e['component'])
              } else {
                this.unmountCmp()
              }
            }
          }
        }
      }
    }
  </script>
</dfk-routed-modal>